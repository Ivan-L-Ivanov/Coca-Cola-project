@model BarCrawlers.Models.BarViewModel

@using Microsoft.AspNetCore.Identity
@using BarCrawlers.Data.DBModels


@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUser = await UserManager.GetUserAsync(User);
}


<div class=" row pt-3">
    <div class="col-md4 col-sm-4">
        <div class="figure-img">
            @if (Model.ImageSrc != null)
            {
                <a href="#">
                    <img class="img-responsive w-100" alt="@Model.Name" src="@Model.ImageSrc">
                </a>
            }
            else
            {
                <a href="#">
                    <img class="card-img-top  w-100" src="~/img/BarBackground.jpg">
                </a>
            }
            <div>
                <h3>Rating: @Model.Rating</h3>
                <h5>@Model.Rating /5 (@Model.TimesRated rates)</h5>
                @if (User.Identity.IsAuthenticated)
                {
                    var user = await UserManager.GetUserAsync(User);
                    var userId = user.Id;

                    @*<form asp-controller="Bars" asp-action="Rate" asp-route-barId=@Model.Id asp-route-userId=@currentUser.Id method="post">
                        <input asp-for="Rating" type="text">
                        <input type="submit" value="Rate" class="btn btn-primary" />
                    </form>*@
                    <form asp-controller="Bars" asp-action="Rate" asp-route-cocktailId="@Model.Id" asp-route-userId="@userId">
                        <p>
                            <input type="number" min=1 max=5 class="form-control mb-2 mr-sm-2" placeholder="rating" name="rating">
                            <input type="submit" value="Rate" class="btn btn-primary" />
                        </p>
                    </form>
                }
            </div>
        </div>

    </div>
    <div class="col-md-6 col-sm-6">
        <h1 itemprop="name">@Model.Name</h1>
        <h3>Contact</h3>
        <p>
            @Model.Phone,  @Model.Email <br />
            @Model.Address, @Model.Town, @Model.Country <br />
        </p>
        @if (@Model.Location != null)
        {
            var locationSrc= Model.Location.Src;
            var LargeMapLink= Model.Location.LargeMapLink;
            var DirMapLink = Model.Location.DirMapLink;

            <div>
                <iframe width="325" height="280" frameborder="0" src=@locationSrc
                        scrolling="no">
                </iframe>
                <div style="white-space: nowrap; text-align: center; width: 325px; padding: 6px 0;">
                    <a id="largeMapLink" target="_blank" href=@LargeMapLink>View Larger Map</a> &nbsp; |
                    &nbsp;
                    <a id="dirMapLink" target="_blank" href=@DirMapLink>Get Directions</a>
                </div>
            </div>

        }
        @*<h3>How to mix:</h3>
        <div itemprop="recipeInstructions">
            <p>
                @Model.
            </p>

        </div>*@
    </div>

</div>

@*<ul>
    @foreach (var item in Model.Cocktails)
    {
        <li itemprop="ingredients">
            <h4>
                @item.CocktailName,
            </h4>
        </li>
    }
</ul>*@











<h1>Details</h1>

<div>
    <h4>Bar</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        @*<dt class="col-sm-2">
                <input asp-for="Rating">
                <input type="submit" value="Rate" class="btn btn-primary" />
            </dt>*@
        <dd class="col-sm-1">
            @Html.DisplayFor(model => model.Rating)
        </dd>
        <dd class="col-sm-9">
            @if (User.Identity.IsAuthenticated)
            {
                <form asp-action="Rate" asp-route-Id=@Model.Id asp-route-userId=@currentUser.Id method="post">
                    @*<input type="hidden" asp-for="barId" />
                        <input type="hidden" asp-for="UserId" />*@
                    <input asp-for="Rating" type="text">
                    <input type="submit" value="Rate" class="btn btn-primary" />
                </form>

            }
            @*<input asp-for="Rating" class="col-sm-1">*@
            @*<>*@
            @*<a class="btn btn-primary" asp-action="Rate" asp-route-barId=@Model.Id asp-route-userId=@currentUser.Id >Rate</a>*@
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TimesRated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TimesRated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ImageSrc)
        </dt>
        <dd class="col-sm-10">
            @if (string.IsNullOrEmpty(Model.ImageSrc))
            {
                <img class="img-fluid" src="~/img/BarSiluet.jpg" height="50" width="50">

            }
            else
            {
                <img src="@Model.ImageSrc" height="50" width="50">
            }
        </dd>
        @if (User.Identity.IsAuthenticated)
        {
            @if (await UserManager.IsInRoleAsync(currentUser, "Magician"))
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.IsDeleted)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.IsDeleted)
                </dd>
            }
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Phone)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Phone)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.District)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.District)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Town)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Town)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Country)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Country)
        </dd>
        @*<dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Location)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Location.Id)
            </dd>*@
    </dl>
</div>
<div>
    @if (User.Identity.IsAuthenticated)
    {
        @if (await UserManager.IsInRoleAsync(currentUser, "Magician"))
        {
            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
            <a class="btn btn-primary" asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
        }
    }
    <a class="btn btn-primary" asp-action="Index">Back to List</a>
</div>
<br>
<div>
    <a class="btn btn-primary" asp-controller="BarUserComments" asp-action="Index" asp-route-barId="@Model.Id">Comments</a>
    <a class="btn btn-primary" asp-controller="Bars" asp-action="LoadCocktails" asp-route-id="@Model.Id">Cocktails</a>
</div>
