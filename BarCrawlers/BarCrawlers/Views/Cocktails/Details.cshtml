@model CocktailViewModel

@using Microsoft.AspNetCore.Identity
@using BarCrawlers.Data.DBModels

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUser = await UserManager.GetUserAsync(User);
}


<div class=" row pt-3">
    <div class="col-md4 col-sm-4">
        <div class="figure-img">
            @if (Model.ImageSrc != null)
            {
                <a href="#">
                    <img class="img-responsive w-100" alt="@Model.Name" src="@Model.ImageSrc">
                </a>
            }
            else
            {
                <a href="#">
                    <img class="card-img-top  w-100" src="~/img/defaultCocktailImg.jpg">
                </a>
            }
            <div>
                <h3>Rating: @Model.Rating</h3>
                <h5>@Model.Rating /5 (@Model.TimesRated rates)</h5>
                @if (User.Identity.IsAuthenticated)
                {
                    var user = await UserManager.GetUserAsync(User);
                    var userId = user.Id;

                    <form asp-controller="Cocktails" asp-action="Rate" asp-route-cocktailId="@Model.Id" asp-route-userId="@userId">
                        <p>
                            <input type="number" min=1 max=5 class="form-control mb-2 mr-sm-2" placeholder="rating" name="rating">
                            <input type="submit" value="Rate" class="btn btn-primary" />
                        </p>
                    </form>
                }
            </div>
        </div>

    </div>
    <div class="col-md-6 col-sm-6">
        <h1 itemprop="name">@Model.Name</h1>
        <h3>Ingredients:</h3>
        <ul>
            @foreach (var item in Model.Ingredients)
            {
                <li itemprop="ingredients">
                    <h4>
                        @item.IngredientName,
                        @if (@item.Parts != null)@item.Parts parts
                    </h4>
                </li>
            }
        </ul>
        <h3>How to mix:</h3>
        <div itemprop="recipeInstructions">
            <p>
                @Model.Instructions
            </p>

        </div>
    </div>

</div>
















<h1>Details</h1>

<div>
    <h4>Cocktail</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rating)
            @if (User.Identity.IsAuthenticated)
            {
                var user = await UserManager.GetUserAsync(User);
                var userId = user.Id;

                <form asp-controller="Cocktails" asp-action="Rate" asp-route-cocktailId="@Model.Id" asp-route-userId="@userId">
                    <p>
                        <input type="text" name="rating">
                        <input type="submit" value="Rate" class="btn btn-primary" />
                    </p>
                </form>
            }
        </dd>
        </ br>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TimesRated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TimesRated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ImageSrc)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ImageSrc)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsDeleted)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsAlcoholic)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsAlcoholic)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Instructions)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Instructions)
        </dd>
        <dt class="col-sm-2">

            <!--@Html.DisplayNameFor(model => model.Ingredients)-->
            Contains:
        </dt>
        <dd class="col-sm-10">



            <!--@Html.DisplayFor(model => model.Ingredients)-->

            @foreach (var item in Model.Ingredients)
            {
                <p>
                    @item.IngredientName, @item.Parts parts
                </p>
            }
        </dd>

    </dl>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
<div>
    @if (User.IsInRole("Magician"))
    {
        <a asp-controller="Cocktails" asp-action="Edit" asp-route-Id="@Model.Id" class="btn btn-primary">Edit</a>

        @if (@Model.IsDeleted)
        {
            <form id="form_recover">
                <input type="hidden" asp-for="Id" value="@Model.Id">
                <input class="btn btn-primary" type="button" id="btnRecover" value="Recover" />
            </form>
        }
        else
        {
            <a class="btn btn-primary" asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
            @*<a asp-controller="Cocktails" asp-action="Create" class="btn btn-success" asp-route-Id="@Model.Id">Show</a>*@
        }
    }
    <a class="btn btn-primary" asp-controller="CocktailComments" asp-action="Index" asp-route-cocktailId="@Model.Id">Comments</a>
    <a class="btn btn-primary" asp-controller="Cocktails" asp-action="LoadBars" asp-route-id="@Model.Id">Bars serving</a>
</div>
<div>
    <dl class="row">
        @foreach (var item in Model.Comments)
        {
            <dt class="col-sm-2">
                @Html.DisplayFor(model => item.UserName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.Text)
            </dd>
            @*<dd>
                    <a asp-controller="CocktailComments" asp-action="Details" asp-route-id="@item.CocktailId">Details</a>
                    @if (item.UserName == User.Identity.Name)
                    {
                        <a asp-controller="CocktailComments" asp-action="Edit" asp-route-cocktailId="@item.CocktailId" asp-route-userlId="@item.UserId">| Edit |</a>
                        <a asp-controller="CocktailComments" asp-action="Delete" asp-route-cocktailId="@item.CocktailId" asp-route-userlId="@item.UserId">Delete</a>
                    }
                </dd>*@
        }
    </dl>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @if (User.Identity.IsAuthenticated)
    {
        <script src="~/js/Cocktails/Recover.js"></script>
    }
}
